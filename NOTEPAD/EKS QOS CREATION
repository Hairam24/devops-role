EKS QOS CREATION:

sudo su -
hostnamectl set-hostname eks.example.com
bash
yum update -y
yum install unzip -y

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

aws configure
	


curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
eksctl version
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl

sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
kubectl version --client
ssh-keygen

eksctl create cluster --name my-cluster-hari --region us-east-1 --version 1.32 --vpc-public-subnets subnet-00608da34c56e569d,subnet-0541b7ff15bd92fd9 --without-nodegroup

eksctl create nodegroup   --cluster my-cluster-hari   --region us-east-1   --name my-node-group   --node-ami-family Ubuntu2204   --node-type t2.small   --subnet-ids subnet-00608da34c56e569d,subnet-0541b7ff15bd92fd9   --nodes 3   --nodes-min 2   --nodes-max 4   --ssh-access   --ssh-public-key /root/.ssh/id_rsa.pub

########################################################################################################################

vim brustable.yaml

[
apiVersion: v1
kind: Pod
metadata:
  name: hariram-app
  namespace: default
  labels:
   app: hariram-app
spec:
  containers:
    - name: web-app
      image: nginx
      resources:
        limits:
          memory: "250Mi"
        requests:
          memory: "150Mi"
]

kubectl apply -f brustable.yaml
kubectl get pods
kubectl describe pod hariram-app [check for qos class]


#############################################################################################################################


vim besteffort.yaml

[
apiVersion: v1
kind: Pod
metadata:
  name: hariram1-app
  namespace: default
  labels:
   app: hariram1-app
spec:
  containers:
    - name: web-app
      image: nginx
]


kubectl apply -f besteffort.yaml
kubectl get pods
kubectl describe pod hariram1-app

############################################################################################################################

vim guranteed.yaml

[
apiVersion: v1
kind: Pod
metadata:
  name: hariram2-app
  namespace: default
  labels:
   app: hariram2-app
spec:
  containers:
    - name: web-app
      image: nginx
      resources:
        limits:
          memory: "250Mi"
          cpu: "400m"
        requests:
          memory: "250Mi"
          cpu: "400m"
]


kubectl apply -f guranteed.yaml
kubectl get pods
kubectl describe pod hariram2-app

############################################################################################################
